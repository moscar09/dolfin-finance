/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/budget-category/{id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put: operations['editBudgetCategory'];
    post?: never;
    delete: operations['deleteBudgetCategory'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/upload/bank-transactions': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['uploadFile'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/monthly-budget': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['monthlyBudgetList'];
    put?: never;
    post: operations['createMonthlyBudget'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/budget-category': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['list'];
    put?: never;
    /**
     * Add a budget category
     * @description Adds a budget category, which is a top-level entry in the budgeting strategy
     */
    post: operations['newBudgetCategory'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/budget-category/{categoryId}/subcategory': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['newBudgetSubcategory'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/transaction/{id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch: operations['patchTransaction'];
    trace?: never;
  };
  '/monthly-budget/{month}-{year}/allocation/{subcategoryId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch: operations['updateBudgetAllocation'];
    trace?: never;
  };
  '/transaction': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['getTransactions'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/monthly-budget/{month}-{year}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['getMonthlyBudgetByDate'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/bank-account': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['getAccounts'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    BudgetCategory: {
      /** Format: int64 */
      id?: number;
      name?: string;
      description?: string;
      subcategories?: components['schemas']['BudgetSubcategory'][];
    };
    BudgetSubcategory: {
      /** Format: int64 */
      id?: number;
      category?: components['schemas']['BudgetCategory'];
      name?: string;
    };
    /** @description A bank account which can credit and debit amounts */
    'Bank Account': {
      /** Format: int64 */
      id?: number;
      name?: string;
      prettyName?: string;
      identifier?: string;
      /** @enum {string} */
      type?: 'ASSET' | 'EXTERNAL';
    };
    BudgetAllocation: {
      /** Format: int64 */
      id?: number;
      monthlyBudget?: components['schemas']['MonthlyBudget'];
      budgetSubcategory?: components['schemas']['BudgetSubcategory'];
      transactionList?: components['schemas']['Transaction'][];
      amount?: number;
      remaining?: number;
      /** Format: int64 */
      budgetSubcategoryId?: number;
      spent?: number;
    };
    MonthlyBudget: {
      /** Format: int32 */
      month?: number;
      /** Format: int32 */
      year?: number;
      budget?: number;
      allocations?: components['schemas']['BudgetAllocation'][];
    };
    /** @description A bank transaction as recorded on the statement */
    Transaction: {
      /** Format: int64 */
      id?: number;
      referenceId?: string;
      /** Format: date */
      date?: string;
      description?: string;
      humanDescription?: string;
      isDebit?: boolean;
      amount?: number;
      sourceAccount?: components['schemas']['Bank Account'];
      destAccount?: components['schemas']['Bank Account'];
      /** Format: int64 */
      budgetSubcategoryId?: number;
      /** Format: int64 */
      allocationId?: number;
    };
    /** @description How much money was allocated for this subcategory in this month */
    'Budget Subcategory Allocation': {
      amount?: number;
      spent?: number;
      remaining?: number;
      budgetSubcategory?: components['schemas']['BudgetSubcategoryDto'];
    };
    BudgetSubcategoryDto: {
      /** Format: int64 */
      id?: number;
      name?: string;
    };
    /** @description The budget for a month */
    'Monthly Budget': {
      /** Format: int64 */
      id?: number;
      /**
       * Format: int32
       * @description The calendar month, Jan = 1
       */
      month?: number;
      /**
       * Format: int32
       * @description The Calendar year
       */
      year?: number;
      allocations?: components['schemas']['Budget Subcategory Allocation'][];
    };
    TransactionPatchData: {
      /** Format: int64 */
      budgetSubcategoryId?: number;
    };
    BudgetAllocationPatchData: {
      amount?: number;
    };
    /** @description The top-level entry of the budgeting strategy */
    'Budget Category': {
      /** Format: int64 */
      id?: number;
      name?: string;
      description?: string;
      subcategories?: components['schemas']['BudgetSubcategoryDto'][];
    };
    BankAccountDto: {
      /** Format: int64 */
      id?: number;
      identifier?: string;
      /** @enum {string} */
      type?: 'ASSET' | 'EXTERNAL';
      name?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  editBudgetCategory: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['BudgetCategory'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['BudgetCategory'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  deleteBudgetCategory: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  uploadFile: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        'application/json': {
          /** Format: binary */
          file: string;
        };
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': boolean;
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  monthlyBudgetList: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Monthly Budget'][];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  createMonthlyBudget: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['MonthlyBudget'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Monthly Budget'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  list: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Budget Category'][];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  newBudgetCategory: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['BudgetCategory'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['BudgetCategory'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  newBudgetSubcategory: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        categoryId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['BudgetSubcategory'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['BudgetSubcategory'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  patchTransaction: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['TransactionPatchData'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Transaction'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  updateBudgetAllocation: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        month: number;
        year: number;
        subcategoryId: number;
      };
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['BudgetAllocationPatchData'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Budget Subcategory Allocation'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  getTransactions: {
    parameters: {
      query: {
        startDate: string;
        endDate: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Transaction'][];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  getMonthlyBudgetByDate: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        month: number;
        year: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['Monthly Budget'];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
  getAccounts: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': components['schemas']['BankAccountDto'][];
        };
      };
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          '*/*': string;
        };
      };
    };
  };
}
